#!/bin/sh -e

# Define color variables for output
RED='\033[1;31m'
GREEN='\033[1;32m'
YELLOW='\033[1;33m'
NC='\033[0m'

# Detect the operating system and architecture
SYSTEM=$(uname -s)
ARCH=$(uname -m)
HOSTNAME=$(hostname)

# Validation of hostname
if [ -z "$HOSTNAME" ]; then
    echo "${RED}Error: Unable to determine hostname.${NC}" >&2
    exit 1
fi

echo "${YELLOW}Starting setup for ${SYSTEM} (${ARCH}) with hostname: ${HOSTNAME}${NC}"

# Logic for system detection and setup case "$SYSTEM" in
case "$SYSTEM" in
    Darwin)
        echo "${YELLOW}Building flake:\t${HOSTNAME}${NC}"

        nix --extra-experimental-features 'nix-command flakes' build .#darwinConfigurations.$HOSTNAME.system

        echo "${YELLOW}Switching to new generation...${NC}"
        ./result/sw/bin/darwin-rebuild switch --flake .#$HOSTNAME

        echo "${YELLOW}Cleaning up...${NC}"
        unlink ./result || echo "${RED}Warning: Failed to unlink result.${NC}"
        ;;

    Linux)
        # Check if the system is NixOS
        echo "${YELLOW}Building flake:\t${HOSTNAME}${NC}"
        if [ -f /etc/NIXOS ]; then
            /run/current-system/sw/bin/nixos-rebuild switch --flake .#$HOSTNAME
        else
            home-manager switch --experimental-features 'nix-command flakes' --impure --flake .#$HOSTNAME
        fi
        ;;

    *)
        echo "${RED}Error: Unsupported system '${SYSTEM}'.${NC}" >&2
        exit 1
        ;;
esac

echo "${GREEN}Switch to new generation complete!${NC}"

